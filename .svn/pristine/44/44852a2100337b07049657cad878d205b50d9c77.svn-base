<?php
// +----------------------------------------------------------------------
// | When work is a pleasure, life is a joy!
// +----------------------------------------------------------------------
// | User: Song   | Time:2018/7/5 16:36
// +----------------------------------------------------------------------
// | TITLE: 项目节点api
// +----------------------------------------------------------------------

namespace app\api\controller\v2;

use app\api\controller\Api;
use app\api\model\Dir;
use app\api\model\Project;
use app\api\model\ProjectBom;
use app\api\model\ProjectLine;
use app\api\model\ProjectNode;
use app\api\model\Relation;
use app\api\model\ResourceNameModel;
use think\Validate;

class Node extends Api
{
    /*
     * 查找节点文档目录属性列表<项目节点简要列表>
     */
    public function getSimpleList()
    {
        $jsonData = $this->request->param();
        $params = json_decode($jsonData['data'],true);

        $rule = [
            'project_id' => 'require|integer|>:0',
        ];
        $msg = [
            'project_id.require' => '项目ID不能为空！',

        ];
        $this->validate = new Validate($rule, $msg);
        $result = $this->validate->check($params);
        if (!$result)
        {
            return $this->returnmsg(401,$this->validate->getError(),"");
        }

        $list = ProjectNode::getNodeList($params['project_id']);
        if($list)
        {
            return $this->returnmsg(200,'success！',$list);
        }
        return $this->returnmsg(402,' 数据库无此数据!','');

    }


    /*
     * 查找项目节点页面中节点文档目录的详情<项目节点详细列表>
     */
    public function getDetailList()
    {
        $jsonData = $this->request->param();
        $params = json_decode($jsonData['data'],true);

        $rule = [
            'project_id' => 'require|integer|>:0',
        ];
        $msg = [
            'project_id.require' => '项目ID不能为空！',

        ];
        $this->validate = new Validate($rule, $msg);
        $result = $this->validate->check($params);
        if (!$result)
        {
            return $this->returnmsg(401,$this->validate->getError(),"");
        }

        $list = ProjectNode::getNodeDetail($params['project_id']);//通过project_id查找项目节点详情
        if($list)
        {
            foreach($list as $k=>$v)
            {
                $data[$k]['node_id'] = $v['node_id'];
                $data[$k]['process_name'] = $v['process_name'];
                $data[$k]['start_time'] = $v['start_time'];
                $data[$k]['end_time'] = $v['end_time'];
                $data[$k]['actual_start_time'] = $v['actual_start_time'];
                $data[$k]['actual_end_time'] = $v['actual_end_time'];
                //获取审核信息
                $where['admin_id'] = $v['admin_id'];
                $where['target_id'] = $v['node_id'];
                $where['target_type'] = 2;
                $auditorInfo = Relation::getAuditInfo($where);
                //通过admin_id获取上传人员
                $uploaderArr['admin_id'] = $v['admin_id'];
                $uploaderArr['nickname'] = Relation::getNickName($v['admin_id']);
                $data[$k]['doc_list']['doc_name'] = isset($v['file_name'])?$v['file_name']:'';
                $data[$k]['doc_list']['status'] = $v['status'];
                $data[$k]['doc_list']['uploader'] = $uploaderArr;
                $data[$k]['doc_list']['auditor'] = isset($auditorInfo['auditor'])?$auditorInfo['auditor'] : '';

            }
            return $this->returnmsg(200,'Operation succeeded!',$data);
        }

        return $this->returnmsg(402,'Data illegal！');
    }



    /*
     * 项目节点属性中的项目详情
     *【node_id】【project_id,node_key】二选一
     * @param int node_id 项目节点id
     * @param int project_id 项目id
     * @param string node_key 项目id
     *
     * @return json
     */
    public function getDetail()
    {
        $jsonData = $this->request->param();//获取传输过来的参数(json)
        $paramArr = json_decode($jsonData['data'],true);

        $nodeId = isset($paramArr['node_id']) && !empty($paramArr['node_id'])? intval($paramArr['node_id']) : '';
        $projectId = isset($paramArr['project_id']) && !empty($paramArr['project_id']) ? intval($paramArr['project_id']) : '';
        $nodeKey = isset($paramArr['node_key']) && !empty($paramArr['node_key']) ? intval($paramArr['node_key']) : '';

        if(!isset($nodeId) || (!isset($projectId) && !isset($nodeKey)) )
        {
            return $this->returnmsg(401,'参数错误');
        }

        //如果projectId、node_key存在，则找对应的主键值node_id
        if($projectId && $nodeKey)
        {
            $nodeIdArr = ProjectNode::getNodeId($projectId,$nodeKey);
            $nodeId = $nodeIdArr['node_id'];
        }

        if($nodeId)
        {
            //通过node_id获取节点属性信息
            $nodeAttrInfo = ProjectNode::NodeDetailByNodeId($nodeId);

            //计算完成进度
            if($nodeAttrInfo['actual_end_time'] <= $nodeAttrInfo['end_time'])
            {
                $nodeAttrInfo['progress'] = '100%';
            }
            else
            {
                $day = intval(($nodeAttrInfo['actual_end_time'] - $nodeAttrInfo['end_time'])/(3600*24));
                $nodeAttrInfo['progress'] = '超时'.$day.'天';
            }
            $where['target_id'] = $nodeId;
            $where['target_type'] = 2;
            $nameList = Relation::getRoleName($where);//查找节点负责人信息
            $processId = ProjectNode::getProcessId($nodeId);//通过node_id获取流程id
            $nodeAttrInfo['resource_lib'] = ResourceNameModel::getResourceById($processId);//资源库
            $nodeAttrInfo['manager']['product_manager'] = isset($nameList['product_manager'])?$nameList['product_manager']:'';
            $nodeAttrInfo['manager']['project_manager'] = isset($nameList['project_manager'])?$nameList['project_manager']:'';

            $tplInfo = ProjectNode::getTplInfo($nodeId);//文档模板 doc_template
            $tobeSubmitInfo = ProjectBom::getBomInfoById($nodeId);//待提交文档
            $submitInfo = ProjectBom::getBomInfoById($nodeId,$submitStatus=1);//已提交文档

            $nodeKeyArr = ProjectNode::getNodeKey($nodeId);//通过node_id查询对应的node_key、project_id
            $fromKey = ProjectLine::getNodeFrom($nodeKeyArr['project_id'],$nodeKeyArr['node_key']);//上一个节点的node_key
            $toKey = ProjectLine::getNodeTo($nodeKeyArr['project_id'],$nodeKeyArr['node_key']);//下一个节点的node_key
            $fromIdArr = ProjectNode::getNodeId($nodeKeyArr['project_id'],$fromKey['from']);//获取上一个节点的node_id
            $nextIdArr = ProjectNode::getNodeId($nodeKeyArr['project_id'],$toKey['to']);//获取下一个节点的node_id

            //上一层节点属性
            foreach($fromIdArr as $item)
            {
                $upNodeInfo[] = ProjectNode::getUpDownNode($item['node_id']);
            }

            //下一层节点属性
            foreach($nextIdArr as $vv)
            {
                $nextNodeInfo[] = ProjectNode::getUpDownNode($vv['node_id']);
            }

            //所有信息合并成新数组
            $arr=[];
            $arr['node_attr'] = $nodeAttrInfo;
            $arr['doc_template'] = $tplInfo;
            $arr['doc_waiting_submit'] = $tobeSubmitInfo;
            $arr['doc_already_submit'] = $submitInfo;
            $arr['prev_node'] = $upNodeInfo;
            $arr['next_node'] = $nextNodeInfo;

            return $this->returnmsg(200,'success！',$arr);
        }
        else
        {
            return $this->returnmsg(401,'参数错误');
        }

    }
}