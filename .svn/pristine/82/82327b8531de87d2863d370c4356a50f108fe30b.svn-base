<?php
// +----------------------------------------------------------------------
// | When work is a pleasure, life is a joy!
// +----------------------------------------------------------------------
// | User: Song   | Time:2019/1/8 10:43
// +----------------------------------------------------------------------
// | TITLE: 新增/编辑物料
// +----------------------------------------------------------------------

namespace app\api\controller\v2;

use app\api\controller\Api;
use think\Validate;
use app\common\library\KCloudData;

class Material extends Api
{
    //新增/编辑物料（包括变更）
    public function edit()
    {
        $jsonData = $this->request->param();
        $params = json_decode($jsonData['data'],true);
        //数据验证
        $rule = [
            'material_name' => 'require',
            'auditor1' => 'require',
            'auditor2' => 'require',
            'is_component' => 'require|in:0,1',
            'create_org' => 'integer|>:0',
            'use_org' => 'integer|>:0',
            'material_attribute' => 'integer|>:0',
            'is_suite' => 'integer|between:0,1',
            'basic_unit' => 'require',
            'inventory_type' => 'require',
            'inventory_unit' => 'require',
            'convert_unit' => 'integer|between:1,2',
            'sale_unit' => 'require',
            'sale_pricing_unit' => 'require',
            'purchase_unit' => 'require',
            'purchase_pricing_unit' => 'require',
            'give_material_way' => 'require',
            'over_give_control' => 'require',
            'min_give_material' => 'require',
            'min_give_unit' => 'require',
            'plan_strategy' => 'require',
            'fixed_lead_time_unit' => 'require',
            'vary_lead_time' => 'require',
            'check_lead_time' => 'require',
            'check_lead_time_unit' => 'require',
            'offset_time_unit' => 'require',
        ];
        $msg = [
            'material_name.require' => '物料名称不能为空！',
            'auditor1.require' => '上级审核人不能为空！',
            'auditor2.require' => '最终审核人不能为空！',
            'is_component.require' => '是否成品不能为空！',
            'create_org.require' => '创建组织不能为空！',
            'use_org.require' => '使用组织不能为空！',
            'material_attribute.require' => '物料属性不能为空！',
            'is_suite.require' => '是否套件不能为空！',
            'basic_unit.require' => '基本单位不能为空！',
            'inventory_type.require' => '存货类别不能为空！',
            'inventory_unit.require' => '库存单位不能为空！',
            'convert_unit.require' => '换算方向不能为空！',
            'sale_unit.require' => '销售单位不能为空！',
            'sale_pricing_unit.require' => '销售计价单位不能为空！',
            'purchase_unit.require' => '采购单位不能为空！',
            'purchase_pricing_unit.require' => '采购计价单位不能为空！',
            'give_material_way.require' => '发料方式不能为空！',
            'over_give_control.require' => '超发控制方式不能为空！',
            'min_give_material.require' => '最小发料批量不能为空！',
            'min_give_unit.require' => '最小发料单位不能为空！',
            'plan_strategy.require' => '计划策略不能为空！',
            'fixed_lead_time_unit.require' => '固定提前期不能为空！',
            'vary_lead_time.require' => '变动提前期不能为空！',
            'check_lead_time.require' => '检查提前期不能为空！',
            'check_lead_time_unit.require' => '检查提前期单位不能为空！',
            'offset_time_unit.require' => '计划偏置时间单位不能为空！',
        ];
        $this->validate = new Validate($rule, $msg);
        $result = $this->validate->check($params);
        if (!$result)
        {
            return $this->returnmsg(402,$this->validate->getError(),"");
        }

        try {
            \app\api\model\MaterialSlave::editMaterial($params);
            $this->returnmsg(200, 'success!');
        } catch (DbException $e) {
            $this->returnmsg(400, $e->getMessage());
        }
    }


    //获取物料详情
    public function getDetail()
    {
        $jsonData = $this->request->param();
        $param = json_decode($jsonData['data'],true);

        //数据验证
        $result = $this->validate($param, [
            'material_code' => 'require',
        ]);

        if ($result !== true) {
            $this->returnmsg(402, $result);
        }
        try {
            $this->returnmsg(200, 'success!', \app\api\model\MaterialSlave::materialDetail($param['material_code']));
        } catch (DbException $e) {
            $this->returnmsg(400, $e->getMessage());
        }
    }

    //获取ERP物料的选择框信息
    public function getInfo()
    {
        $data = [
            'basic' => [
                'material_property' => [
                    '外购' => 1 ,
                    '自制' => 2,
                    '委外' => 3,
                    '配置' => 9,
                    '资产' => 10,
                    '特征' => 4,
                    '费用' => 11,
                    '虚拟' => 5,
                    '服务' => 6,
                    '一次性' => 7,
                    '模型' => 12,
                ],
                'basic_unit' => [
                    '栋' => 'dong',
                    '克' => 'g',
                    '千克' => 'kg',
                    '升' => 'L',
                    '辆' => 'liang',
                    '米' => 'm',
                    '毫升' => 'ml',
                    '毫米' => 'mm',
                    'Pcs' => 'Pcs',
                    '台' => 'tai',
                    '套' => 'tao',
                    '桶' => 'tong',
                    '支' => 'zhi',
                ],
                //存货类别
                'inventory_type' => [
                    '原材料' => 'CHLB01_SYS',
                    '自制半成品' => 'CHLB03_SYS',
                    '线材成品' => 'CHLB05_01',
                    '音频成品' => 'CHLB05-02',
                    '壳膜成品' => 'CHLB05-03',
                    '车充成品' => 'CHLB05-04',
                    '适配器成品' => 'CHLB05-05',
                    '商业电源成品' => 'CHLB05-06',
                    '充电背包成品' => 'CHLB05-07',
                    '碱性电池成品' => 'CHLB05-08',
                    '市场物料成品' => 'CHLB05-09',
                    '笔电成品' => 'CHLB05-10',
                    '移动电源成品' => 'CHLB05-SYS',
                    '服务' => 'CHLB06-SYS',
                    '资产' => 'CHLB07-SYS',
                ],
                'rate' => [
                    '17%增值税' => 'SL01_SYS',
                    '13%增值税' => 'SL02_SYS',
                    '7%增值税' => 'SL03_SYS',
                    '零税率的增值税' => 'SL04_SYS',
                    '11%增值税' => 'SL05_SYS',
                    '6%增值税' => 'SL06_SYS',
                    '3%增值税' => 'SL07_SYS'
                ]
            ],
            'stock' => [
                'basic_unit' => [
                    '栋' => 'dong',
                    '克' => 'g',
                    '千克' => 'kg',
                    '升' => 'L',
                    '辆' => 'liang',
                    '米' => 'm',
                    '毫升' => 'ml',
                    '毫米' => 'mm',
                    'Pcs' => 'Pcs',
                    '台' => 'tai',
                    '套' => 'tao',
                    '桶' => 'tong',
                    '支' => 'zhi',
                ],
                'unit_convert' => [
                    '库存单位-->辅助单位' => 1,
                    '辅助单位-->库存单位' => 2,
                ]
            ],
            'sale' => [
                'sale_unit' => [
                    '栋' => 'dong',
                    '克' => 'g',
                    '千克' => 'kg',
                    '升' => 'L',
                    '辆' => 'liang',
                    '米' => 'm',
                    '毫升' => 'ml',
                    '毫米' => 'mm',
                    'Pcs' => 'Pcs',
                    '台' => 'tai',
                    '套' => 'tao',
                    '桶' => 'tong',
                    '支' => 'zhi'
                ],
                'sale_price_unit' => [
                    '栋' => 'dong',
                    '克' => 'g',
                    '千克' => 'kg',
                    '升' => 'L',
                    '辆' => 'liang',
                    '米' => 'm',
                    '毫升' => 'ml',
                    '毫米' => 'mm',
                    'Pcs' => 'Pcs',
                    '台' => 'tai',
                    '套' => 'tao',
                    '桶' => 'tong',
                    '支' => 'zhi'
                ]
            ],
            //采购
            'purchase' => [
                'purchase_unit' => [
                    '栋' => 'dong',
                    '克' => 'g',
                    '千克' => 'kg',
                    '升' => 'L',
                    '辆' => 'liang',
                    '米' => 'm',
                    '毫升' => 'ml',
                    '毫米' => 'mm',
                    'Pcs' => 'Pcs',
                    '台' => 'tai',
                    '套' => 'tao',
                    '桶' => 'tong',
                    '支' => 'zhi'
                ],
                'purchase_price_unit' => [
                    '栋' => 'dong',
                    '克' => 'g',
                    '千克' => 'kg',
                    '升' => 'L',
                    '辆' => 'liang',
                    '米' => 'm',
                    '毫升' => 'ml',
                    '毫米' => 'mm',
                    'Pcs' => 'Pcs',
                    '台' => 'tai',
                    '套' => 'tao',
                    '桶' => 'tong',
                    '支' => 'zhi'
                ]
            ],
            //生产
            'product' => [
                'product_type' => [
                    '汇报入库-普通生产' => 'SCDD01_SYS',
                    '直接入库-普通生产' => 'SCDD03_SYS',
                    '工序汇报入库-普通生产' => 'SCDD05_SYS',
                    '柔性工序汇报入库-普通生产' => 'SCDD08_SYS',
                ],
                //标准工时单位
                'standard_labor_unit' => [
                    '时' => 1,
                    '分' => 60,
                    '秒' => 3600
                ],
                //发料方式
                'issue_qty' => [
                    '直接领料' => 1,
                    '直接倒冲' => 2,
                    '调拨领料' => 3,
                    '调拨倒冲' => 4,
                    '不发料' => 7,
                ],
                //超发控制方式
                'over_give_control' =>[
                    '最小发料批量' => 1,
                    '允许超发' => 2,
                    '不允许超发' => 3,
                    '按损耗率超发' => 4,
                ],
                //最小发料批量
                'min_issue_qty' => [
                    'min_give_unit' => [
                        '栋' => 'dong',
                        '克' => 'g',
                        '千克' => 'kg',
                        '升' => 'L',
                        '辆' => 'liang',
                        '米' => 'm',
                        '毫升' => 'ml',
                        '毫米' => 'mm',
                        'Pcs' => 'Pcs',
                        '台' => 'tai',
                        '套' => 'tao',
                        '桶' => 'tong',
                        '支' => 'zhi'
                    ]
                ]
            ],
            //计划
            'plan' => [
                //计划策略
                'plan_strategy' => [
                    'MRP' => 0,
                    'MPS' => 1,
                    '无' => 2
                ],
                //制造策略
                'manufacture_strategy' => [
                    'MTS10(考虑库存)' =>'ZZCL001_SYS',
                    'MTS20(不考虑库存)' =>'ZZCL002_SYS',
                    'MTO' =>'ZZCL003_SYS',
                    'IHT(继承BOM父件)' =>'ZZCL004_SYS',
                ],
                //订货策略
                'order_strategy' => [
                    'LFL(批对批)' => 0,
                    'POQ(期间订货)' => 1,
                    'FOQ(固定批量)' => 2,
                    'ROP(再订货点)' => 3,
                ],
                //计划区
                'plan_area' => [
                    '采购计划区' => 'JHQ001_SYS',
                    '销售计划区' => 'JHQ002_SYS'
                ],
                //检查提前期单位
                'check_lead_time_unit' => [
                    '天' => 1,
                    '周' => 2,
                    '月' => 3,
                ]
            ],
            //计划控制
            'plan_control' => [
                //偏置时间单位
                'offset_time_unit' => [
                    '天' => 1,
                    '时' => 24,
                    '分' => 1440,
                    '秒' => 86400,
                ]
            ]
        ];
        $this->returnmsg(200, 'success!', $data);

    }


    //获取物料分组
    public function getMaterialGroup()
    {
        //物料分组
        $model = new KCloudData();
        $dataArr["FormId"] = "SAL_MATERIALGROUP"; //业务对象表单Id（必录）
        //编码、名称、所属部门
        $dataArr["FieldKeys"] = "FNumber,FName"; //字段keys，字符串类型用逗号分隔，比如"key1,key2..."（必录）

        $data = $model->commonQuery($dataArr,$page=1,$keyword='',$FilterString = '',$pageSize='2000',$status = false);
        $material_group_data = json_decode($data['data'],true);

        $this->returnmsg(200, 'success!', $material_group_data);
    }
}